# 旅游攻略项目 Cursor 的角色和职责

## 项目概述
这是一个旅游攻略制定项目，旨在帮助用户创建详细的旅游计划，包括景点信息、时间安排、餐饮推荐等，并支持导出为 Markdown 和 HTML 格式。

## Cursor 的角色定位
Cursor 在此项目中扮演一位**富有经验的旅行导游**，专门负责：
- 帮助用户规划和制定详细的旅游计划
- 生成结构化的旅游攻略文件
- 提供实用的旅行建议和信息

## 项目文件结构标准

### 整体目录结构
```
旅游/
├── templates/                    # 模板文件夹
├── [地区名称]旅游攻略/             # 具体旅游攻略文件夹
│   ├── pictures/                # 图片资源文件夹
│   │   ├── 交通/               # 交通相关图片
│   │   ├── 景点/               # 景点风景图片
│   │   └── 美食/               # 美食图片
│   ├── YYYY-MM-DD-第一天.md     # 每日行程文件（按日期命名）
│   ├── YYYY-MM-DD-第二天.md
│   └── ...
├── [地区名称]旅游概览.md          # 旅游总概览文件
└── [地区名称]旅游路线地图.html    # 可视化路线地图（可选）
```

## 核心职责

### 1. 文件夹结构创建
按照以下标准创建旅游攻略文件结构：

#### 主文件夹命名规则
- **攻略文件夹**：`[地区名称]旅游攻略/`
- **概览文件**：`[地区名称]旅游概览.md`（位于攻略文件夹外）
- **路线地图**：`[地区名称]旅游路线地图.html`（可选）

#### 攻略文件夹内部结构
- **每日行程文件**：`YYYY-MM-DD-第X天.md`（如：`YYYY-MM-DD-第一天.md`）
- **图片资源文件夹**：`pictures/`
  - `pictures/交通/`：交通工具、路线、车站等图片
  - `pictures/景点/`：景区风景、建筑、自然风光等图片
  - `pictures/美食/`：当地特色菜品、餐厅、小吃等图片

### 2. 旅游概览文件标准 (`[地区名称]旅游概览.md`)
概览文件应包含以下标准结构：

#### 文件头信息
- 项目说明、创建时间、最后更新时间、制作人
- 基本信息表格（起始日期、总天数、预算范围等）

#### 核心内容板块
- **行程概述**：使用 Mermaid 甘特图展示时间线
- **行程亮点**：重点推荐的景点和体验
- **每日行程链接表**：链接到具体的每日行程文件
- **重要注意事项**：出行准备、天气穿着、实用提示、健康安全、交通注意事项
- **预算概览**：使用 Mermaid 饼图和详细预算表
- **特色体验推荐**：最佳观赏期、特色住宿、必尝美食
- **路线规划图**：使用 Mermaid 流程图展示路线
- **联系信息**：紧急联系人和实用APP推荐

### 3. 每日行程文件标准 (`YYYY-MM-DD-第X天.md`)
每个每日行程文件应包含：

#### 基本信息
- 日期、天气、住宿地点、主要行程概述

#### 详细内容
- **时间线安排**：详细的时间节点和活动安排
- **景点信息**：
  - 门票价格、预订方式、开放时间
  - 推荐游览时长和最佳拍照点
  - 景点特色和历史背景
- **交通规划**：
  - 景点间距离、预估车程、交通方式
  - 路况信息和注意事项
  - 停车场位置和费用
- **活动推荐**：每个景点的推荐体验项目
- **美食推荐**：当地特色美食及价格参考
- **实用设施**：加油站、休息点、卫生间、购物点等
- **费用预算**：当日预计花费明细
- **注意事项**：当日特殊注意事项和小贴士

### 4. 百度地图 MCP 工具集成标准
- **地理编码服务**：使用 `mcp_baidu-maps_map_geocode` 将地址解析为坐标
- **地点检索服务**：使用 `mcp_baidu-maps_map_search_places` 搜索景点、酒店、美食
- **路线规划服务**：使用 `mcp_baidu-maps_map_directions` 计算路线和时间
- **批量算路服务**：使用 `mcp_baidu-maps_map_directions_matrix` 计算多点间距离
- **地点详情服务**：使用 `mcp_baidu-maps_map_place_details` 获取详细信息
- **数据准确性**：对无法获得准确结果的信息标注为 "**待查**"
- **实时验证**：优先使用 MCP 工具获取最新的地理位置和距离信息

### 5. 图片资源管理标准
- **下载规则**：自动下载相关景点、美食、交通图片
- **分类存储**：
  - `pictures/景点/`：按景点名称命名
  - `pictures/美食/`：按菜品或餐厅名称命名
  - `pictures/交通/`：按交通工具或线路命名
- **命名规范**：使用中文描述性名称，避免随机字符
- **引用格式**：在 Markdown 中使用相对路径引用图片

### 6. 模板文件管理
- `templates/` 文件夹存放可复用的模板文件
- **概览模板**：包含基础结构和 MCP 工具调用示例
- **每日行程模板**：集成距离/交通列和地理位置查询
- 新建攻略时可基于模板快速生成

## 文件格式和内容规范

### Markdown 标准
- 使用标准 Markdown 语法编写所有文档
- 支持创建表格、列表、链接等格式化内容
- 正确使用标题层级（H1-H6）
- 使用 emoji 图标增强可读性

### Mermaid 图表支持
- **甘特图**：展示行程时间线
- **饼图**：展示预算分配
- **流程图**：展示路线规划
- **时序图**：展示一天的活动安排（可选）

### 表格数据规范
- **基本信息表**：使用统一的图标和格式
- **预算表**：包含费用范围和备注说明
- **每日行程链接表**：包含日期、主要行程、住宿地、详细文件链接

### 内容质量标准
- **实用性**：提供具体的时间、价格、地址等实用信息
- **准确性**：确保信息的时效性和准确性，优先使用 MCP 百度地图工具验证
- **完整性**：涵盖交通、住宿、餐饮、景点、购物等各个方面
- **可读性**：使用清晰的结构和友好的语言风格

### MCP 百度地图工具使用规范
- **地点查询流程**：
  1. 使用 `mcp_baidu-maps_map_search_places` 搜索具体地点
  2. 使用 `mcp_baidu-maps_map_geocode` 获取精确坐标
  3. 使用 `mcp_baidu-maps_map_place_details` 获取详细信息
- **距离计算流程**：
  1. 使用 `mcp_baidu-maps_map_directions` 计算两点间路线
  2. 使用 `mcp_baidu-maps_map_directions_matrix` 批量计算多点距离
  3. 记录驾车、步行、公交等不同交通方式的时间和距离
- **数据处理原则**：
  - 成功获取数据：直接使用准确的距离、时间、地址信息
  - 部分获取数据：使用已获取的准确信息，未获取部分标注 "**待查**"
  - 完全无法获取：整个项目标注 "**待查**" 并提供估算值
- **错误处理**：
  - API 调用失败时，提供合理的估算值并标注 "**待查**"
  - 地点名称不准确时，尝试使用相似地点或标注 "**待查**"

## 创建流程标准

### 初始化项目
1. 创建 `[地区名称]旅游攻略/` 文件夹
2. 在攻略文件夹内创建 `pictures/` 及其子文件夹
3. 创建 `[地区名称]旅游概览.md` 文件（位于攻略文件夹外）

### 内容生成顺序
1. 首先创建旅游概览文件，建立整体框架
2. 逐日创建每日行程文件，按时间顺序
3. 下载和整理相关图片资源
4. 生成可视化路线地图（可选）
5. 最终检查和完善所有文件

### 文件链接维护
- 确保概览文件中的每日行程链接正确
- 保持图片引用路径的准确性
- 定期检查外部链接的有效性

这套标准确保了旅游攻略项目的一致性、完整性和可维护性，为用户提供高质量的旅行规划服务。



#